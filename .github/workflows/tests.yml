name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Black
        run: pip install black
      - name: Run Black check
        run: black --check src/

  ubuntu-system-python:
    name: ${{ matrix.os }}-system-python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os :
          - ubuntu-18.04
          - ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install System Python
        run: |
          sudo apt install python3-dev python3-pip
      - name: Install Testing Requirements
        run: python3 -m pip install nox
      - name: Run Tests
        run: python3 -m nox -e tests

  anaconda:
    name: ${{ matrix.os }}-anaconda-${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}  # setup-miniconda requires using login bash shells to activate env
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8']
        env: [base, test]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        if: matrix.env == 'base'
        with:
          # using the base env is a bit different
          # cannot specify python-version,
          # must have activate-environment: ''
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ''
      - uses: conda-incubator/setup-miniconda@v2
        if: matrix.env != 'base'
        with:
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
          auto-update-conda: true
          activate-environment: ${{ matrix.env }}
      - name: Conda Info
        run: conda info
      - name: Install Testing Requirements
        run: python -m pip install nox
      - name: Run Tests
        run: python -m nox -e tests

  rhel:
    name: rhel${{ matrix.os-version }}-system-python
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os-version: ["7", "8"]
    container: "centos:${{ matrix.os-version }}"
    steps:
      - name: Install newer Git (CentOS 7)
        if: matrix.os-version == '7'
        run: |
          yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          yum remove -y git
          yum install -y git224
      - name: Install newer Git (CentOS 8)
        if: matrix.os-version == '8'
        run: |
          dnf update -y
          dnf install -y git
      - uses: actions/checkout@v2
      - name: Install System Python
        run: yum install -y python3-devel python3-pip python3
      - name: Python Info
        run: python3 --version
      - name: Install Testing Requirements
        run: python3 -m pip install nox
      - name: Run Tests
        run: python3 -m nox -e tests
